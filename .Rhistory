mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_point(mapping = aes(color = continent)) +
geom_smooth(method = "loess")  +
scale_x_continuous(trans = scales::log_trans())  # natural log
library(skimr)
gapminder
library(gapminder)
library(tidyverse)
library(skimr)
gapminder <- gapminder::gapminder
skim(gapminder)
mpg
skim(gapminder)
mpg <- mpg
diamonds <- diamonds
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_freqpoly()
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_freqpoly() +
geom_histogram()
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_freqpoly(color = 'red') +
geom_histogram()
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram() +
geom_freqpoly(color = 'red')
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram() +
geom_freqpoly(color = 'red', linewidth = 2)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram() +
geom_freqpoly(color = 'red', linewidth = 1.25)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(binwidth = 500) +
geom_freqpoly(color = 'red', linewidth = 1.25, binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(binwidth = 500, color = 'blue') +
geom_freqpoly(color = 'red', linewidth = 1.25, binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(binwidth = 500, fill = 'blue') +
geom_freqpoly(color = 'red', linewidth = 1.25, binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(binwidth = 500, fill = 'navy') +
geom_freqpoly(color = 'red', linewidth = 1.25, binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(binwidth = 500, fill = 'navy') +
geom_freqpoly(color = 'maroon', linewidth = 1.25, binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram()+
facet_wrap(~cut)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(binwidth = 1)+
facet_wrap(~cut)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(binwidth = 1)+
facet_wrap(~cut, scales = 'free_y')
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(binwidth = 15)+
facet_wrap(~cut, scales = 'free_y')
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(binwidth = 30)+
facet_wrap(~cut, scales = 'free_y')
sale_df <- read_csv(
"https://bcdanl.github.io/data/home_sales_nyc.csv")
ggplot(data = sales_df,
mapping = aes(x = price))+
geom_histogram(binwidth = 10000)
ggplot(data = sale_df,
mapping = aes(x = price))+
geom_histogram(binwidth = 10000)
ggplot(data = sale_df,
mapping = aes(x = sale.price))+
geom_histogram(binwidth = 10000)
ggplot(data = sale_df,
mapping = aes(x = sale.price))+
geom_histogram(binwidth = 30000)
ggplot(data = sale_df,
mapping = aes(x = sale.price))+
geom_histogram(binwidth = 50000)
ggplot(data = sale_df,
mapping = aes(x = sale.price))+
geom_histogram(binwidth = 30000)
ggplot(data = sale_df,
mapping = aes(x = sale.price))+
geom_histogram(binwidth = 30000, fill = 'steelblue')
mapping = aes(x = log10(sale.price))+
ggplot(data = sale_df,
mapping = aes(x = sale.price))+
geom_histogram(binwidth = 30000, fill = 'steelblue')
ggplot(data = sale_df,
mapping = aes(x = log10(sale.price))+
geom_histogram(binwidth = 30000, fill = 'steelblue')
ggplot(data = sale_df,
mapping = aes(x = log10(sale.price)))+
geom_histogram(binwidth = 30000, fill = 'steelblue')
ggplot(data = sale_df,
mapping = aes(x = sale.price))+
geom_histogram(binwidth = 30000, fill = 'steelblue')
ggplot(data = sale_df,
mapping = aes(x = log10(sale.price)))+
geom_histogram(binwidth = 30000, fill = 'steelblue')
ggplot(data = sale_df,
mapping = aes(x = log10(sale.price)))+
geom_histogram(binwidth = 1, fill = 'steelblue')
ggplot(data = sale_df,
mapping = aes(x = log10(sale.price)))+
geom_histogram(bins = 100, fill = 'steelblue')
ggplot(data = sale_df,
mapping = aes(x = log10(sale.price)))+
geom_histogram(bins = 500, fill = 'steelblue')
ggplot(data = sale_df,
mapping = aes(x = log10(sale.price)))+
geom_histogram(bins = 300, fill = 'steelblue')
ggplot(data = sale_df,
mapping = aes(x = log10(sale.price)))+
geom_histogram(bins = 200, fill = 'steelblue')
ggplot(data = sale_df,
mapping = aes(x = sale.price))+
geom_histogram(binwidth = 30000, fill = 'steelblue')
ggplot(data = sale_df,
mapping = aes(x = log10(sale.price)))+
geom_histogram(bins = 200, fill = 'steelblue')
ggplot(data = diamonds,
mapping = aes(x = cut))+
geom_bar()
ggplot(data = diamonds,
mapping = aes(x = cut, color = cut))+
geom_bar()
ggplot(data = diamonds,
mapping = aes(x = cut, fit = cut))+
geom_bar()
ggplot(data = diamonds,
mapping = aes(x = cut, fill = cut))+
geom_bar()
ggplot(data = diamonds,
mapping = aes(x = cut, y = price), stat = 'identity')+
geom_bar()
ggplot(data = diamonds,
mapping = aes(x = cut, y = price))+
geom_bar(stat = 'identity')
ggplot(data = diamonds,
mapping = aes(x = cut, fill = cut))+
geom_bar()
ggplot(data = diamonds,
mapping = aes(x = cut, y = price))+
geom_bar(stat = 'identity')# Doesn't make sense to do here, but allows you to set your own y mapping to override count default, geom_col() can also be used which just allows you to set bar height with y in aes(), ggplot also used alphebetical order by default to map out categories, can factor with a given # of levels to specify order, ie; "Fair"<"Good"<"Ideal"<"Premium"<"Very Good"
ggplot(data = diamonds,
mapping = aes(x = cut,
y = after_stat(prop)), group = 1)+
geom_bar()
ggplot(data = diamonds,
mapping = aes(x = cut,
y = after_stat(prop)))+
geom_bar(group = 1)
ggplot(data = diamonds,
mapping = aes(x = cut,
y = after_stat(prop),
group = 1))+
geom_bar()
ggplot(data = diamonds,
mapping = aes(x = cut,
y = after_stat(prop),
group = 1.75))+
geom_bar()# have to also put group = some number inside of aes() in order for it to calc proportions successfully
ggplot(data = diamonds)+
stat_summar(
mapping = aes(x = cut, y = depth),
fun.min = min,
fun.max = max,
fun = median
)
ggplot(data = diamonds)+
stat_summary(
mapping = aes(x = cut, y = depth),
fun.min = min,
fun.max = max,
fun = median
)
ggplot(data = diamonds)+
geom_bar(mapping =
aes(x = cut,
fill = cut # color will outline bars, fill will fill colors into bars,   ))
))+
guides(fill = "none")# all done by var set to
ggplot(data = diamonds)+
geom_bar(mapping =
aes(
x = cut,
fill = clarity
))
ggplot(data = diamonds)+
geom_bar(mapping =
aes(
x = cut,
fill = clarity
), position = 'dodge')
ggplot(data = diamonds)+
geom_bar(mapping =
aes(
x = cut,
fill = clarity
), position = 'fill')
ggplot(data = diamonds)+
geom_bar(mapping =
aes(
x = cut,
fill = clarity
), position = 'fill')+
labs(y = 'proportion')# Shows proportion of each clarity value per each cut value
ggplot(data = diamonds)+
geom_bar(mapping =
aes(
x = cut,
fill = clarity
))
library(tidyverse)
```
ggplot(data = mpg,
mapping =
aes(x = cty,
y = hwy))+
geom_point()+
geom_abline()
ggplot(data = diamonds)+
geom_bar(mapping =
aes(
x = cut,
fill = clarity
), position = 'fill')+
labs(y = 'proportion')# Shows proportion of each clarity value per each cut value
ggplot(data = mpg,
mapping =
aes(x = cty,
y = hwy))+
geom_point()+
geom_abline()+
coord_fixed()
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy))+
geom_point(alpha = 0.5)+
geom_smooth(se = F)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy))+
geom_point(alpha = 0.3)+
geom_smooth(se = F)
mpg
skim(mpg)
library(skimr)
skim(mpg)
mpg <- mpg
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy))+
geom_point(alpha = 0.3)+
geom_smooth(se = F, aes(group = compact))
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy))+
geom_point(alpha = 0.3)+
geom_smooth(aes(group = compact))
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy))+
geom_point(alpha = 0.3)+
geom_smooth(se = F, aes(group = class))
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy))+
geom_point(alpha = 0.3)+
geom_smooth(se = F, aes(group = trans))
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy))+
geom_point(alpha = 0.3)+
geom_smooth(se = F, aes(group = drv))
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(alpha = 0.3)+
geom_smooth(se = F)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(alpha = 0.3)+
geom_smooth(se = F)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy))+
geom_point(alpha = 0.3)+
geom_smooth(se = F, aes(group = drv))
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(alpha = 0.3)+
geom_smooth()
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(alpha = 0.3)+
geom_smooth(se = F)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy))+
geom_point(alpha = 0.3, aes(color = drv))+
geom_smooth(se = F)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(alpha = 0.3)+
geom_smooth(se = F)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy))+
geom_point(alpha = 0.3, aes(color = drv))+
geom_smooth(se = F)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy))+
geom_point(alpha = 0.3, aes(color = drv))+
geom_smooth(se = F)+
theme_minimal()
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(alpha = 0.3)+
geom_smooth(se = F)+
theme_minimal()
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy))+
geom_point(alpha = 0.3)+
geom_smooth(se = F, aes(group = drv))+
theme_minimal()
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy))+
geom_point(alpha = 0.3)+
geom_smooth(se = F)+
theme_minimal()
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy))+
geom_point(alpha = 0.3, aes(color = drv))+
geom_smooth(se = F, aes(linetype = drv))+
theme_minimal()
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point()
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(aes(shape = 16))
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(aes(shape = 1))
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(shape = 16)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(shape = 24)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(shape = 19)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(shape = 21)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(shape = 20)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(shape = 20, se = T)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(shape = 1)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(shape = 10)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(shape = 13)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(shape = 8)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(shape = 16)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv),
alpha = .3)+
geom_point(shape = 16)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv),
alpha = .5)+
geom_point(shape = 16)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(alpha = 0.3, shape = 16)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(color = 'white')+
geom_point(alpha = 0.3, shape = 16)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(color = 'white', size = 10)+
geom_point(alpha = 0.3, shape = 16)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(color = 'white', size = 5)+
geom_point(alpha = 0.3, shape = 16)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(color = 'white', size = 1)+
geom_point(alpha = 0.3, shape = 16)
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy,
color = drv))+
geom_point(color = 'white', size = 3)+
geom_point(alpha = 0.3, shape = 16)
