[
  {
    "objectID": "personal_blog.html",
    "href": "personal_blog.html",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "danl_320.html",
    "href": "danl_320.html",
    "title": "DANL 320",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "danl_310.html",
    "href": "danl_310.html",
    "title": "DANL 310",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nggplot Basics | Hw 1 Post\n\n\nIn this post the basics of ggplot2 syntax with be discussed\n\n\n\n\n\nFeb 13, 2025\n\n\nDaniel Noone\n\n\n2 min\n\n\n\n\n\n\n\n\n\n\n\n\nDANL | Lec. Notes\n\n\n\n\n\n\n\n\nFeb 12, 2025\n\n\n2 min\n\n\n\n\n\n\n\n\n\n\n\n\nDANL 310 | ggplot2 basics notes\n\n\n\n\n\n\n\n\nFeb 9, 2025\n\n\nDaniel Noone\n\n\n7 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "class_blog_posts/welcome/index.html",
    "href": "class_blog_posts/welcome/index.html",
    "title": "Welcome All!",
    "section": "",
    "text": "Welcome to my blog powered by Quarto and GitHub!!\n\nAs a Data Analytics major, it is helpful to hone my abilities by doing exploratory data analysis. With that, I will be posting little projects here and there on my website, feel free to take a look!"
  },
  {
    "objectID": "class_blog.html",
    "href": "class_blog.html",
    "title": "Class Blog Posts",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nWelcome All!\n\n\n\n\n\n\n\n\nDec 9, 2023\n\n\nDaniel Noone\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "class_projects.html",
    "href": "class_projects.html",
    "title": "Class Projects",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "danl_310_mats/danl_lec_3_4/danl_310_lec_3_and_4.html",
    "href": "danl_310_mats/danl_lec_3_4/danl_310_lec_3_and_4.html",
    "title": "DANL 310 | ggplot2 basics notes",
    "section": "",
    "text": "Packages & DataFrame\n\nlibrary(gapminder)\nlibrary(tidyverse)\nlibrary(skimr)\ngapminder &lt;- gapminder::gapminder\nskim(gapminder)\n\n\nData summary\n\n\nName\ngapminder\n\n\nNumber of rows\n1704\n\n\nNumber of columns\n6\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n2\n\n\nnumeric\n4\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\ncountry\n0\n1\nFALSE\n142\nAfg: 12, Alb: 12, Alg: 12, Ang: 12\n\n\ncontinent\n0\n1\nFALSE\n5\nAfr: 624, Asi: 396, Eur: 360, Ame: 300\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nyear\n0\n1\n1979.50\n17.27\n1952.00\n1965.75\n1979.50\n1993.25\n2007.0\n▇▅▅▅▇\n\n\nlifeExp\n0\n1\n59.47\n12.92\n23.60\n48.20\n60.71\n70.85\n82.6\n▁▆▇▇▇\n\n\npop\n0\n1\n29601212.32\n106157896.74\n60011.00\n2793664.00\n7023595.50\n19585221.75\n1318683096.0\n▇▁▁▁▁\n\n\ngdpPercap\n0\n1\n7215.33\n9857.45\n241.17\n1202.06\n3531.85\n9325.46\n113523.1\n▇▁▁▁▁\n\n\n\n\nmpg &lt;- mpg\ndiamonds &lt;- diamonds\n\n\n\nMaking a Plot\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp))\np + \n  geom_point(alpha = 0.25, color = 'blue') + \n  geom_smooth(method = 'gam', color = 'maroon')\n\n\n\n\n\n\n\n\n\n\nPlot with color argument in aes() mapping\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp,\n                          color = continent))\np + \n  geom_point(alpha = 0.5) + \n  geom_smooth() +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nPlot with aesthetics set in individual geoms\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp))\np + \n  geom_point(color = 'purple') +\n  geom_smooth(color = 'orange', method = 'loess', se = F, size = 1.5) # different non-linear method, and shading for error false\n\n\n\n\n\n\n\n\n\n\nUsing scale_*() and labs() functions with plot\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp))\np + \n  geom_point(alpha = 0.3) +\n  geom_smooth() +\n  scale_x_log10(labels = scales::dollar) +\n  labs(x = \"GDP Per Capita\", y = \"Life Expectancy in Years\",\n        title = \"Economic Growth and Life Expectancy\",\n        subtitle = \"Data points are country-years\",\n        caption = \"Source: Gapminder.\")\n\n\n\n\n\n\n\n\n\n\nCan have different aes() mappings over different geoms\n\np &lt;- ggplot(data = gapminder, \n            mapping = aes(x = gdpPercap, y = lifeExp))\n\np + geom_point(mapping = aes(color = continent)) +\n    geom_smooth(method = \"loess\")  +\n    scale_x_continuous(trans = scales::log_trans())  # natural log\n\n\n\n\n\n\n\n\n\n\nHistogram and Freq Poly geoms with binwidth\n\nggplot(data = diamonds, mapping = aes(x = price)) +\n  geom_histogram(binwidth = 500, fill = 'navy') +\n  geom_freqpoly(color = 'maroon', linewidth = 1.25, binwidth = 500)\n\n\n\n\n\n\n\n\n\n\nFacet wrap with scales param\n\nggplot(data = diamonds, mapping = aes(x = price)) +\n  geom_histogram(binwidth = 30)+\n  facet_wrap(~cut, scales = 'free_y') # Allows for the y_scale to be free, in this case fair cut diamond price distribution is hard to see without free_y for scales\n\n\n\n\n\n\n\n\n\n\nSales df loading\n\nsale_df &lt;- read_csv(\n  \"https://bcdanl.github.io/data/home_sales_nyc.csv\")\n\n\n\nHistograms with log10(x)\n\nggplot(data = sale_df,\n       mapping = aes(x = sale.price))+\n  geom_histogram(binwidth = 30000, fill = 'steelblue')\n\n\n\n\n\n\n\nggplot(data = sale_df,\n       mapping = aes(x = log10(sale.price)))+\n  geom_histogram(bins = 200, fill = 'steelblue')\n\n\n\n\n\n\n\n\n\n\nBar geoms with stat = ‘identity’\n\nggplot(data = diamonds,\n       mapping = aes(x = cut, fill = cut))+\n  geom_bar()\n\n\n\n\n\n\n\nggplot(data = diamonds,\n       mapping = aes(x = cut, y = price))+\n  geom_bar(stat = 'identity')# Doesn't make sense to do here, but allows you to set your own y mapping to override count default, geom_col() can also be used which just allows you to set bar height with y in aes(), ggplot also used alphebetical order by default to map out categories, can factor with a given # of levels to specify order, ie; \"Fair\"&lt;\"Good\"&lt;\"Ideal\"&lt;\"Premium\"&lt;\"Very Good\"\n\n\n\n\n\n\n\n\n\n\nBar geoms with proportion instead of count\n\nggplot(data = diamonds, \n       mapping = aes(x = cut,\n                     y = after_stat(prop), \n                     group = 1.75))+\n  geom_bar()# have to also put group = some number inside of aes() in order for it to calc proportions successfully\n\n\n\n\n\n\n\n\n\n\nStat summary\n\nggplot(data = diamonds)+\n  stat_summary(\n    mapping = aes(x = cut, y = depth),\n    fun.min = min, # If don't include these, will just be dots representing whatever is after fun =\n    fun.max = max,\n    fun = median # Can also put mean instead of median\n  )\n\n\n\n\n\n\n\n\n\n\nColor and fill asthetic (position adjustment, primarily bar charts)\n\nggplot(data = diamonds)+\n  geom_bar(mapping = \n             aes(x = cut,\n                 fill = cut # color will outline bars, fill will fill colors into bars,\n                 ))+ # all done by var set to \n  guides(fill = \"none\")# guides can remove legend, and can alter formatting for legends and theme stuff\n\n\n\n\n\n\n\n\n\nggplot(data = diamonds)+\n  geom_bar(mapping = \n             aes(\n               x = cut,\n               fill = clarity\n             ))\n\n\n\n\n\n\n\n\n\nggplot(data = diamonds)+\n  geom_bar(mapping = \n             aes(\n               x = cut,\n               fill = clarity\n             ), position = 'dodge') # If don't include 'dodge' bars will be stacked, if do will have multiple bars per x-axis category, clustered bar chart\n\n\n\n\n\n\n\n\n\nggplot(data = diamonds)+\n  geom_bar(mapping = \n             aes(\n               x = cut,\n               fill = clarity\n             ), position = 'fill')+\n  labs(y = 'proportion')# Shows proportion of each clarity value per each cut value\n\n\n\n\n\n\n\n\n\n\nCoordinate Systems\n\nggplot(data = mpg,\n       mapping =\n         aes(x = cty,\n             y = hwy))+\n  geom_point()+\n  geom_abline()\n\n\n\n\n\n\n\n\n\nggplot(data = mpg,\n       mapping =\n         aes(x = cty,\n             y = hwy))+\n  geom_point()+\n  geom_abline()+\n  coord_fixed()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Daniel A. Noone",
    "section": "",
    "text": "Senior at SUNY Geneseo majoring in Data Analytics. Academic interests lie in the fields of Artificial Intelligence and Machine Learning. Following the completion of my B.S. in Data Analytics I will be attending the Rochester Institute of Technology to pursue an M.S. in Artificial Intelligence."
  },
  {
    "objectID": "index.html#who-is-daniel-noone",
    "href": "index.html#who-is-daniel-noone",
    "title": "Daniel A. Noone",
    "section": "",
    "text": "Senior at SUNY Geneseo majoring in Data Analytics. Academic interests lie in the fields of Artificial Intelligence and Machine Learning. Following the completion of my B.S. in Data Analytics I will be attending the Rochester Institute of Technology to pursue an M.S. in Artificial Intelligence."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Daniel A. Noone",
    "section": "Education",
    "text": "Education\nState University of New York at Geneseo | Geneseo, NY  B.S. Data Analytics | Aug 2022 - May 2025 \nRochester Institute of Technology | Henrietta, NY  M.S. Artificial Intelligence | August 2025 - Undetermined"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Daniel A. Noone",
    "section": "Experience",
    "text": "Experience\nMuch experience in data collection and transformation, in both R and Python languages. Also well versed in the fundamental machine learning models and their optimization."
  },
  {
    "objectID": "danl_310_mats/danl_lec_5_6/danl_310_lec_5_and_6.html",
    "href": "danl_310_mats/danl_lec_5_6/danl_310_lec_5_and_6.html",
    "title": "DANL | Lec. Notes",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ngsm &lt;- socviz::gss_sm"
  },
  {
    "objectID": "danl_310_mats/danl_lec_5_6/danl_310_lec_5_and_6.html#q2",
    "href": "danl_310_mats/danl_lec_5_6/danl_310_lec_5_and_6.html#q2",
    "title": "DANL | Lec. Notes",
    "section": "Q2",
    "text": "Q2\n\nod &lt;- socviz::organdata\n\n\nQ2a (Cleveland Dotplots, sometimes preferred to barcharts)\n\na &lt;- od %&gt;% \n  group_by(consent_law, country) %&gt;% \n  summarise(dpr_mean = mean(donors, na.rm = T))\n\n`summarise()` has grouped output by 'consent_law'. You can override using the\n`.groups` argument.\n\nggplot(a, mapping = aes(x = dpr_mean, y = fct_reorder(country, dpr_mean), colour = consent_law))+\n  geom_point()+\n  theme(legend.position = 'top')+\n  labs(x = 'Donor Procurement Rate', y = '')\n\n\n\n\n\n\n\n\n\n\nQ2b\n\nb &lt;- a\n\nggplot(b, mapping = aes(x = dpr_mean, y = fct_reorder(country, dpr_mean, na.rm = T)))+\n  geom_point()+\n  facet_wrap(~consent_law, ncol = 1, scales = 'free_y')+\n  labs(y = '', x = 'Donor Procurement Rate')\n\n\n\n\n\n\n\n\n\n\nQ2c (dot and whisker plot, gives error bars for st dev)"
  },
  {
    "objectID": "danl_310_mats/danl_hw_1/ggplot_basics_hw_1.html",
    "href": "danl_310_mats/danl_hw_1/ggplot_basics_hw_1.html",
    "title": "ggplot Basics | Hw 1 Post",
    "section": "",
    "text": "Hi"
  },
  {
    "objectID": "danl_310_mats/danl_hw_1/html_document.html",
    "href": "danl_310_mats/danl_hw_1/html_document.html",
    "title": "ggplot Basics | Hw 1 Post",
    "section": "",
    "text": "library(tidyverse)\ndf &lt;- datasets::mtcars\n\ndf &lt;- df %&gt;% \n  filter(cyl %in% c(4,6)) %&gt;% # Say you wanted to only visualize relationships for 4 or 6 cylinder.\n  mutate(cyl_chr = as.character(cyl))\n\ndf2 &lt;- male_Aus &lt;- read_csv(\n  'https://bcdanl.github.io/data/aus_athletics_male.csv')\n\ndf2 &lt;-df2 %&gt;% \n  group_by(sport) %&gt;% \n  summarise(mean_bf = mean(pcBfat)) %&gt;% \n  mutate(sport = fct_reorder(sport, mean_bf))"
  },
  {
    "objectID": "danl_310_mats/danl_hw_1/html_document.html#if-needed-apply-dplyr-transformation-functions-to-make-it-so-the-target-distribution-or-relationship-can-be-obtained",
    "href": "danl_310_mats/danl_hw_1/html_document.html#if-needed-apply-dplyr-transformation-functions-to-make-it-so-the-target-distribution-or-relationship-can-be-obtained",
    "title": "ggplot Basics | Hw 1 Post",
    "section": "",
    "text": "library(tidyverse)\ndf &lt;- datasets::mtcars\n\ndf &lt;- df %&gt;% \n  filter(cyl %in% c(4,6)) %&gt;% # Say you wanted to only visualize relationships for 4 or 6 cylinder.\n  mutate(cyl_chr = as.character(cyl))\n\ndf2 &lt;- male_Aus &lt;- read_csv(\n  'https://bcdanl.github.io/data/aus_athletics_male.csv')\n\ndf2 &lt;-df2 %&gt;% \n  group_by(sport) %&gt;% \n  summarise(mean_bf = mean(pcBfat)) %&gt;% \n  mutate(sport = fct_reorder(sport, mean_bf))"
  },
  {
    "objectID": "danl_310_mats/danl_hw_1/html_document.html#create-ggplot-object-with-any-mappings-and-assign-df",
    "href": "danl_310_mats/danl_hw_1/html_document.html#create-ggplot-object-with-any-mappings-and-assign-df",
    "title": "ggplot Basics | Hw 1 Post",
    "section": "Create ggplot() object with any mappings and assign df",
    "text": "Create ggplot() object with any mappings and assign df\n\np = ggplot(data = df, mapping = \n         aes(x = mpg, y = hp))\n\np2 = ggplot(data = df2, mapping = \n              aes(x = sport, y = mean_bf))"
  },
  {
    "objectID": "danl_310_mats/danl_hw_1/html_document.html#apply-the-applicable-geoms-and-theme-or-labs-modifications",
    "href": "danl_310_mats/danl_hw_1/html_document.html#apply-the-applicable-geoms-and-theme-or-labs-modifications",
    "title": "ggplot Basics | Hw 1 Post",
    "section": "Apply the applicable geoms and theme or labs modifications",
    "text": "Apply the applicable geoms and theme or labs modifications\n\nGeoms in ggplot2 allow for one to choose which plotting methods are performed and calibrate certain parameters.\n\n\np + geom_point(aes(color = cyl_chr), size = 2, shape = 16)+\n  labs(x = 'Miles per Gallon', y = 'Horsepower', color = 'Cylinders', title = 'Miles Per Gallon vs. Horsepower')+\n  theme_bw()+\n  theme(legend.position = c(0.95, 0.9))+\n  scale_color_manual(values = c('red',  'blue'))\n\n\n\n\n\n\n\n\n\np2 + geom_bar(aes(fill = sport), position = 'dodge', stat = 'identity')+\n  guides(fill = F)+\n  theme_bw()+\n  labs(x = 'Sport', y = 'Mean Body Fat', title = 'Mean Body Fat vs. Sport')"
  }
]